[0m[[0m[0minfo[0m] [0m[0m[32mconvertAisTests:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcheckPayloadChar[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Success(char) for valid chars[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Failure(x) for invalid chars[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcharToSixBit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Success[Int] with input Success[char][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should calculate correct character => six bit decmial values[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Failure(msg) when provided Failure(msg)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32msixBitIntToBinary[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Success[String] with input Success[Int][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should calculate correct Int => bit stream Strings[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Failure(msg) when provided Failure(msg)[0m[0m
